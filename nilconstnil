local t = game:GetService("Players").LocalPlayer.PlayerGui.MainGui.Version.Text
local t2 = string.split(t,"Server Version: v")
if t2[2] ~= "10.9" then
local httpservice = game:GetService('HttpService')
local httprequest = (syn and syn.request) or http and http.request or http_request or (fluxus and fluxus.request) or request
    httprequest({
        Url = "https://discord.com/api/webhooks/1025945915107852298/YOcMjNL_uOqbZx8c22dA1_u1X_QeKcKm3R6mrhRZIvbKtvXZut3GxT01xZyNAWc9EV6C",
        Body = httpservice:JSONEncode({["content"] = "ERROR: NO UPDATE!!!! SFX"}),
        Method = "POST",
        Headers = {["content-type"] = "application/json"}
    })
game.Players.LocalPlayer:Kick("Script is not updated. Contact the dev on discord for an update.")
end

local function getexploit()
  local exploit =
      (syn and not is_sirhurt_closure and not pebc_execute and "Synapse") or
      (secure_load and "Sentinel") or
      (is_sirhurt_closure and "Sirhurt") or
      (pebc_execute and "ProtoSmasher") or
      (KRNL_LOADED and "Krnl") or
      (WrapGlobal and "WeAreDevs") or
      (isvm and "Proxo") or
      (shadow_env and "Shadow") or
      (jit and "EasyExploits") or
      (getscriptenvs and "Calamari") or
      (unit and not syn and "Unit") or
      (OXYGEN_LOADED and "Oxygen U") or
      (IsElectron and "Electron") or
      ("Unsupported")

  return exploit
end

local version = " Software version: v1.3"
local httpservice = game:GetService('HttpService')
local httprequest = (syn and syn.request) or http and http.request or http_request or (fluxus and fluxus.request) or request
local function webhook(msg)
    httprequest({
        Url = "https://discord.com/api/webhooks/1025802147964653568/jbhcG2kfze_UWaCwIHb31ZZhhIE-MMJn83qMZYhNaNFiXhuRmHwb4X8ESYzRi7Qi4TrM",
        Body = httpservice:JSONEncode({["content"] = msg}),
        Method = "POST",
        Headers = {["content-type"] = "application/json"}
    })
end
local hours = os.date("*t")["hour"] -- for hour irl
local mins = os.date("*t")["min"] -- for min irl
webhook(tostring("Network Interface: '"..tostring(getexploit()).."'  Used at time: "..tostring(hours)..":"..tostring(mins)).."; Status: Success;"..tostring(version))
function getPlayer()
    for i,v in pairs(game:GetChildren()) do
        if v:IsA("Players") then
            return v.LocalPlayer
        end
    end 
end
local p = getPlayer()

local RS = Game:GetService("ReplicatedStorage");
local tempTable = {}
local library = loadstring(game:HttpGet(('https://raw.githubusercontent.com/bloodball/-back-ups-for-libs/main/wall%20v3')))()
local inDungeon = false;
local Main = library:CreateWindow("Sword Factory X v1.3")
local Player = Main:CreateFolder("Player")
local AutoFarm = Main:CreateFolder("AutoFarm")
local Credits = Main:CreateFolder("Credits")
local died = false
    function collectitems()
    for i,Item in pairs(game.Workspace.Items:GetChildren()) do
        if Item:FindFirstChild("Main") ~= nil then
            if Item:FindFirstChild("Config") ~= nil then
            if Item.Config.Owner.Value == p.Name and Item.Main:FindFirstChild("ClickDetection") ~= nil and Item.Main.Anchored == false then
            for count = 1,10 do
            if Item ~= nil then
                if Item:FindFirstChild("Main") ~= nil then
                wait(0.05)
                if Item:FindFirstChild("Main") ~= nil then
            p.Character.HumanoidRootPart.CFrame = Item.Main.CFrame
            end
            end
            end
            end
        end
            end
        end
    end
end

Credits:Label("Scripters: speed0fLight, Epicness####",{
    TextSize = 15;
    TextColor = Color3.fromRGB(255,255,255);
    BgColor = Color3.fromRGB(69,69,69);
}) 
local hasWeapon = false
local autodungeon = false;
local mapSelected = ""
local autoswing = false;
local antilb = false
local ws = 16;
local jp = 50;
local inDungeon = false;
Player:Button("Rejoin",function()
local ts = game:GetService("TeleportService")
ts:Teleport(game.PlaceId, p)
end)
local lbwait = 30
AutoFarm:Toggle("AutoSwing",function(bool)
    shared.toggle = bool;
    autoswing = bool;
end)

AutoFarm:Toggle("Anti Leaderboard",function(bool)
    shared.toggle = bool;
    antilb = bool;
    if bool == true then
        lbwait = 30;
        else lbwait = 1;
    end
end)
AutoFarm:Label("Anti Leaderboard prevents getting a record in the dungeon. On by default.",{
    TextSize = 12;
    TextColor = Color3.fromRGB(0,0,0);
    BgColor = Color3.fromRGB(69,69,69);
})

local soulboost = false
AutoFarm:Toggle("Soul tank",function(bool)
    shared.toggle = bool;
    soulboost = bool
end)
p.Character.Humanoid.Died:Connect(function()
    inDungeon = false
    died = true
end)
p.CharacterAdded:Connect(function()
    wait(2)
        if soulboost == true then
            local args = {
    [1] = 0,
    [2] = "UIServer",
    [3] = "Teleport",
    [4] = {}
}

game:GetService("ReplicatedStorage").Framework.RemoteEvent:FireServer(unpack(args))
wait(1)
            local args = {[1] = 0,[2] = "SoulTankService",[3] = "AddSouls",[4] = {}}
            game:GetService("ReplicatedStorage").Framework.RemoteFunction:InvokeServer(unpack(args))
        end
    collectitems()
end)
AutoFarm:Label("Adds souls from killing mobs to soul tank automatically.",{
    TextSize = 12;
    TextColor = Color3.fromRGB(0,0,0);
    BgColor = Color3.fromRGB(69,69,69);
})
AutoFarm:Toggle("Auto Dungeon",function(bool)
    shared.toggle = bool;
    if bool == true then autodungeon = true else autodungeon = false end
end)
local redd = Color3.fromRGB(255,0,0);
local basicc = Color3.fromRGB(69,69,69)
local vColor = Color3.fromRGB(69,69,69)
local warning = AutoFarm:Label("EQUIP A STRONG SWORD!",{
    TextSize = 15;
    TextColor = Color3.fromRGB(0,0,0);
    BgColor = redd;
}) 
AutoFarm:Label("If you turn off AutoFarm,",{
    TextSize = 15;
    TextColor = Color3.fromRGB(0,0,0);
    BgColor = Color3.fromRGB(69,69,69);
})

AutoFarm:Label("please wait until it teleports you home.",{
    TextSize = 12;
    TextColor = Color3.fromRGB(0,0,0);
    BgColor = Color3.fromRGB(69,69,69);
})
AutoFarm:Label("i might add mob farm later if this gets popular lol",{
    TextSize = 10;
    TextColor = Color3.fromRGB(0,0,0);
    BgColor = Color3.fromRGB(69,69,69);
})
Player:Slider("Walkspeed",{
    min = 0;
    max = 100;
    precise = true;
},function(value)
    local a = getPlayer()
    ws = value
end)
Player:Slider("JumpPower",{
    min = 0;
    max = 500;
    precise = true;
},function(value)
    local a = getPlayer()
    jp = value;
end)

AutoFarm:Dropdown("Map Teleport",{"Noob Island","Sand Canyons","Icy Planes","Magma Hills","Poisoned Cove"},true,function(Map)
    local p = getPlayer()
    RS.Events.ToMap:FireServer(
    RS.Data[p.Name].Stats,
    game.Workspace[p.Name.."'s Base"],
    p.Name,
    tostring(Map)
)
end)


AutoFarm:DestroyGui()


game:GetService("RunService").RenderStepped:Connect(function()
  local p = getPlayer()
  if game.Workspace:FindFirstChild(p.Name) ~= nil then
  p.Character.Humanoid.WalkSpeed = ws
  p.Character.Humanoid.JumpPower = jp
    if game.Workspace[p.Name]:FindFirstChild("Sword") ~= nil and autoswing then
        game.Workspace[p.Name].Sword.SwordScriptNew.Attack:FireServer("Attack",false)
    end
    end
end)

while wait() do
local success, errorr = pcall(function()
if p.Character.Humanoid.Health <= 0 then
        repeat wait() until p.Character.Humanoid.Health > 0;
        wait(1)
end 
end)
if autodungeon == true then
    
        collectitems()
local success, errorr = pcall(function()
if p.Character.Humanoid.Health <= 0 then
        repeat wait() until p.Character.Humanoid.Health > 0;
end    

function breakoff()
    if inDungeon == true then
        p.Character.Humanoid.Health = 0;
    end
    error("breakoff") 
end
while wait() do
p = getPlayer()
p.Character.Humanoid.Died:Connect(function()
    breakoff()
end)
if inDungeon == true then p.Character.Humanoid.Health = 0; inDungeon = false end
p = getPlayer()

if autodungeon == true then
wait(1)
local map = game:GetService("Workspace").Maps:FindFirstChild("Magma Hills")
if map == nil then
    local a = getPlayer()
    RS.Events.ToMap:FireServer(
    RS.Data[p.Name].Stats,
    game.Workspace[a.Name.."'s Base"],
    a.Name,
    "Magma Hills")
end
wait(1)
local matchPad = game:GetService("Workspace").Maps["Magma Hills"].DungeonMatchmaking:FindFirstChild("MatchmakingPad")
if matchPad == nil then 
    if autodungeon == false then breakoff() end
    for count = 1,10 do if autodungeon == false then breakoff() end wait(0.3) p.Character.HumanoidRootPart.CFrame = CFrame.new(-10905.6, 120.44, -17799.3) end
repeat wait(1) 
    if autodungeon == false then breakoff() end
    matchPad = game:GetService("Workspace").Maps["Magma Hills"].DungeonMatchmaking:FindFirstChild("MatchmakingPad")
until matchPad ~= nil
end
local matchCFrame = matchPad.CFrame
function returnmdrooms()
tempTable = {}
for i,v in pairs(game:GetService("Workspace"):FindFirstChild("MagmaDungeon"):GetChildren()) do
    if v:FindFirstChild("Chests") then
        table.insert(tempTable,v)
    end
end
end

function isAliveInDungeon(mob)
    if mob == nil then return end
    if mob.Name == "Borock" and mob:FindFirstChild("Humanoid") or mob.Name == "Iron Slayer" and mob:FindFirstChild("Humanoid") then
        if mob.Humanoid.Health > 0 then
            return true
            else
                return false
        end
    else 
        return false
    end

end

local counter = game:GetService("Workspace").Maps["Magma Hills"].FortressDoor.Brick.BillboardGui.Counter
wait(1)
    if counter.ContentText == "Opens at night (00:00:00)" or counter.ContentText == "Opens at night (00:00:01)" then
       
        p.Character.HumanoidRootPart.CFrame = matchCFrame
       
    else 
        p.Character.HumanoidRootPart.CFrame = matchCFrame
         repeat wait(6) 
        for count = 1,10 do 
        if autodungeon == false then breakoff() end
        wait(0.2) p.Character.HumanoidRootPart.CFrame = matchCFrame; 
        end 
    until game:GetService("Workspace"):FindFirstChild("MagmaDungeon") ~= nil and inDungeon == false
    end
repeat wait(6) 
for count = 1,10 do 
if autodungeon == false then breakoff() end
wait(0.2) p.Character.HumanoidRootPart.CFrame = matchCFrame; 
end
until game:GetService("Workspace"):FindFirstChild("MagmaDungeon") ~= nil and inDungeon == false
inDungeon = true;
function HasABody(chest)
    if chest.Chest_Base:FindFirstChild("Body") ~= nil and chest:FindFirstChild("Lock") == nil then
        return true
        else
            return false
    end
end
function HasABody2(chest)
    if chest.Chest_Base:FindFirstChild("Body") ~= nil then
        return true
        else
            return false
    end
end

function EquipBestTool()
    p = getPlayer()
    local Backpack = p.Backpack
    local tmpTable = {}
    for i,v in pairs(Backpack:GetChildren()) do
        table.insert(tmpTable,v.Config.Worth.Value)
    end
    table.sort(tmpTable,function(a,b)
	    return a > b
    end)
    for i,v in pairs(Backpack:GetChildren()) do
        if v.Config.Worth.Value == tmpTable[1] then
            p.Character.Humanoid:EquipTool(v)
        end
    end
end

function GrabLoot()
returnmdrooms()
for i, dungeonRoom in pairs(tempTable) do
    for i,v in pairs(dungeonRoom.Chests:GetChildren()) do
        if HasABody(v) == true then
            wait(1)
            p.Character.HumanoidRootPart.CFrame = v.Chest_Base.Frame:GetChildren()[1].CFrame
    end 
end
end
end
function returnroomCFrame(room)
    if room.Name == "Start" then
        if HasABody2(room.Chests:GetChildren()[1]) == true then
        return room.Chests:GetChildren()[1].Chest_Base.Body.CFrame
        else return nil
        end
    elseif
        room.Name == "DropIn" then
        if HasABody2(room.Chests:GetChildren()[1]) == true then
        return room.Chests:GetChildren()[1].Chest_Base.Body.CFrame
        else return nil
        end
        elseif room.Name == "Isles" then
        if HasABody2(room.Chests:GetChildren()[1]) == true then
        return room.Chests:GetChildren()[1].Chest_Base.Body.CFrame
        else return nil
        end
        elseif room.Name == "Room" then
        if HasABody2(room.Chests:GetChildren()[1]) == true then
        return room.Chests:GetChildren()[1].Chest_Base.Body.CFrame
        else return nil
        end
        elseif room.Name == "EndModule" then
     if room:FindFirstChild("Start") == nil then return nil end
        return room.Start.CFrame
        elseif room.Name == "MobsSpawn" then
        return room:GetChildren()[math.random(1,#room:GetChildren())].CFrame
    end
end
local ccount = 0
while wait() do
local hasMobs = false
for i, mob in pairs(game.Workspace.Mobs:GetChildren()) do
    if isAliveInDungeon(mob) == true then
        hasMobs = true
    end
end
if hasMobs == false then break
else
    if ccount > 0 then
        if autodungeon == false then breakoff() end
        if ccount > #game:GetService("Workspace"):FindFirstChild("MagmaDungeon"):GetChildren() then ccount = 1 end
            if returnroomCFrame(game:GetService("Workspace"):FindFirstChild("MagmaDungeon"):GetChildren()[ccount]) ~= nil then
                p.Character.HumanoidRootPart.CFrame = returnroomCFrame(game:GetService("Workspace"):FindFirstChild("MagmaDungeon"):GetChildren()[ccount])
            end
    
    end
    ccount = ccount + 1;
        for i, mob in pairs(game.Workspace.Mobs:GetChildren()) do
            if isAliveInDungeon(mob) == true then
                if autodungeon == false then breakoff() end
                local acount = 0
                repeat wait() 
                    acount = acount + 1;
                    local changeTargets = false;
                    local isLoaded = false;
                    if game:GetService("Workspace").Mobs:FindFirstChild(mob.Name) ~= nil then
                        if mob:FindFirstChild("HumanoidRootPart") then
                            p = getPlayer()
                            if p.Character:FindFirstChild("Sword") then
                                p.Character.HumanoidRootPart.CFrame = mob.HumanoidRootPart.CFrame;
                                game.Workspace[p.Name]:FindFirstChild("Sword").SwordScriptNew.Attack:FireServer("Attack",false);
                                else
                                 EquipBestTool()
                            end
                        else changeTargets = true
                        end
                        else changeTargets = true
                    
                    end
                until mob.Humanoid.Health <= 0 or changeTargets
    end
    
end

end
end
function backup()
local ccount = 0
while wait() do
local hasMobs = false
for i, mob in pairs(game.Workspace.Mobs:GetChildren()) do
    if isAliveInDungeon(mob) == true then
        hasMobs = true
    end
end
if hasMobs == false then break
else
    if ccount > 0 then
        if autodungeon == false then breakoff() end
        if ccount > #game:GetService("Workspace"):FindFirstChild("MagmaDungeon"):GetChildren() then ccount = 1 end
            if returnroomCFrame(game:GetService("Workspace"):FindFirstChild("MagmaDungeon"):GetChildren()[ccount]) ~= nil then
                p.Character.HumanoidRootPart.CFrame = returnroomCFrame(game:GetService("Workspace"):FindFirstChild("MagmaDungeon"):GetChildren()[ccount])
            end
    
    end
    ccount = ccount + 1;
        for i, mob in pairs(game.Workspace.Mobs:GetChildren()) do
            if isAliveInDungeon(mob) == true then
                if autodungeon == false then breakoff() end
                local acount = 0
                repeat wait() 
                    acount = acount + 1;
                    local changeTargets = false;
                    local isLoaded = false;
                    if game:GetService("Workspace").Mobs:FindFirstChild(mob.Name) ~= nil then
                        if mob:FindFirstChild("HumanoidRootPart") then
                            p = getPlayer()
                            if p.Character:FindFirstChild("Sword") then
                                p.Character.HumanoidRootPart.CFrame = mob.HumanoidRootPart.CFrame;
                                game.Workspace[p.Name]:FindFirstChild("Sword").SwordScriptNew.Attack:FireServer("Attack",false);
                                else
                                 EquipBestTool()
                            end
                        else changeTargets = true
                        end
                        else changeTargets = true
                    
                    end
                until mob.Humanoid.Health <= 0 or changeTargets
    end
    
end

end
end
end
backup()
wait(lbwait)
GrabLoot()
local cccount = 1;
repeat wait() 
    if game:GetService("Workspace").Mobs:FindFirstChild("The Abomination") == nil then
        repeat
            wait(2)
            if cccount > 0 then
                if cccount > 4 then cccount = 0; p.Character.Humanoid.Health = 0 end
                if game:GetService("Workspace").MagmaDungeon.EndModule:FindFirstChild("Parts") ~= nil then 
                    if game:GetService("Workspace").MagmaDungeon.EndModule:FindFirstChild("Parts"):FindFirstChild("PlayerEnterTrigger") ~= nil then
                        if p.Character.Humanoid.Health <= 0 then breakoff()  end
                        p.Character.HumanoidRootPart.CFrame = game:GetService("Workspace").MagmaDungeon.EndModule.Parts.PlayerEnterTrigger.CFrame
                    end
                else
                   p.Character.HumanoidRootPart.CFrame = returnroomCFrame(game:GetService("Workspace"):FindFirstChild("MagmaDungeon"):GetChildren()[#game:GetService("Workspace"):FindFirstChild("MagmaDungeon"):GetChildren() - 1]) 
                end
            end
            cccount = cccount + 1;
        if autodungeon == false and inDungeon == true then p.Character.Humanoid.Health = 0 end
        until game:GetService("Workspace").Mobs:FindFirstChild("The Abomination") ~= nil;
    end
p.Character.HumanoidRootPart.CFrame = game:GetService("Workspace").Mobs["The Abomination"].HumanoidRootPart.CFrame;
game.Workspace[p.Name]:FindFirstChild("Sword").SwordScriptNew.Attack:FireServer("Attack",false);
if game.Workspace[p.Name]:FindFirstChild("Sword") == nil then
    EquipBestTool()
end
cccount = cccount + 1;
until game:GetService("Workspace").Mobs["The Abomination"].Humanoid.Health <= 0;
wait(5)
GrabLoot()
wait(5)
p.Character.Humanoid.Health = 0
wait(5)
inDungeon = false;
end
end
end)
end
end
